name: Dev Deployment
on:
  push:
    branches:
      - dev
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ vars.SSH_HOST }}  >> ~/.ssh/known_hosts
      - name: Compile CSS from SCSS files
        uses: gha-utilities/sass-build@v0.5.1
        with:
          source: ${{ vars.THEME_PATH }}/library/css/styles.scss
          destination: ${{ vars.THEME_PATH }}/library/css/styles.css
      - name: NPM stuff
        uses: actions/setup-node@v3
        with:
         node-version: 18
      - run: npm i -D --global postcss postcss-cli autoprefixer
      - run: postcss -u autoprefixer --autoprefixer.browsers "> 5%" -o ${{ vars.THEME_PATH }}/library/css/styles.css ${{ vars.THEME_PATH }}/library/css/styles.css
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: 'console\.(info|log)\(([^)]+)\)'
          replace: " "
          include: "**/*.js"
          regex: true
      - name: Auto Minify
        uses: nizarmah/auto-minify@v2.1
        with:
          overwrite: true
          directory: ${{ vars.CONTENT_PATH }}
      - name: Create .env and licences (ACF PRO & ADMIN COLUMNS PRO) auth.json and wp-cli.yml from templates
        run: |
          cd conf
          sed -e "s|@@@DB_NAME@@@|${{ vars.DB_NAME }}_dev|" -e "s|@@@DB_USER@@@|${{ vars.DB_USER }}|" -e "s|@@@DB_PASSWORD@@@|${{ secrets.DB_PASSWORD }}|" -e "s|@@@DB_PREFIX@@@|${{ vars.DB_PREFIX }}|" -e "s|@@@NETWORK_IP@@@|undefined|" template.env > .env
          cd ../html
          sed -e "s|@@@SITE_URL@@@|${{ vars.DEV_SITE_URL }}|" -e "s|@@@ACF_LICENCE_KEY@@@|${{ secrets.ACF_LICENCE_KEY }}|" -e "s|@@@AC_TOKEN@@@|${{ secrets.AC_TOKEN }}|" auth-template.json > auth.json
          sed -e "s|@@@SITE_URL@@@|${{ vars.DEV_SITE_URL }}|" wp-cli-template.yml > wp-cli.yml
      - name: Register Yoast SEO token with composer
        run: composer config -g http-basic.my.yoast.com token ${{ secrets.YOAST_SEO_TOKEN }}
      - name: Install composer dependencies
        uses: ramsey/composer-install@v2
        with:
         working-directory: html
      - name: Clean up
        run: |
         cd html
         rm composer.*
         cd ..
         cd ${{ vars.THEME_PATH }}/library/css/
         rm *.scss
         rm -rf import
      - name: Create exclude-file.txt
        run: php exclude.php
      - name: Deploy with rsync
        run: rsync -avPC --delete --no-perms --exclude-from='exclude-file.txt' -e 'ssh -i /home/runner/.ssh/github-actions' . ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }}:${{vars.SSH_DEV_DIR }}
      - name: Create directories for logs and backup if not there already
        run: ssh ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} mkdir -p ${{vars.SSH_DEV_DIR }}/logs ${{vars.SSH_DEV_DIR }}/backups
      - name: Install and Activate Wordpress Plugins
        run: |
          cd ${{ vars.RUNNER_REPO_ROOT }}
          echo "Installing WP-CLI"
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          echo "Installing and activating plugins if necessary"
          chmod +x plugins.sh
          ./plugins.sh ${{ vars.SSH_USER }} ${{ vars.SSH_HOST }} ${{vars.SSH_DEV_DIR }}
      - name: Wordpress Cleanup
        run: |
          cd ${{ vars.RUNNER_REPO_ROOT }}
          php wp-cli.phar package install wp-media/wp-rocket-cli:trunk
          php wp-cli.phar cache flush --path=html/wp --skip-plugins --skip-themes --ssh="${{ vars.SSH_USER }}"@"${{ vars.SSH_HOST }}":"${{ vars.SSH_DEV_DIR }}"
          php wp-cli.phar rewrite flush --path=html/wp --skip-plugins --skip-themes --ssh="${{ vars.SSH_USER }}"@"${{ vars.SSH_HOST }}":"${{ vars.SSH_DEV_DIR }}"
          php wp-cli.phar rocket clean --confirm --path=html/wp --skip-plugins --skip-themes --ssh="${{ vars.SSH_USER }}"@"${{ vars.SSH_HOST }}":"${{ vars.SSH_DEV_DIR }}"
